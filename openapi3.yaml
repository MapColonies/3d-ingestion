openapi: 3.0.1
info:
  title: 3d ingestion job
  description: Service to create 3d ingestion job
  version: 0.0.1
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
servers:
  - url: http://localhost:8081
paths:
  /jobs:
    post:
      operationId: createJob
      summary: Add a new ingestion job
      tags:
        - jobs
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createPayload'
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/job'
        400:
          $ref: '#/components/responses/badRequest'
        '5XX':
          $ref: '#/components/responses/unexpectedError'
    get:
      operationId: getAll
      summary: Get all ingestion jobs
      tags:
        - jobs
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/jobs'
        204:
          description: OK
        '5XX':
          $ref: '#/components/responses/unexpectedError'
  /jobs/{jobId}:
    get:
      operationId: getJob
      summary: Get a specific ingestion job by id
      tags:
        - jobs
      parameters:
        - $ref: '#/components/parameters/jobId'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/job'
        404:
          $ref: '#/components/responses/notFound'
        '5XX':
          $ref: '#/components/responses/unexpectedError'
    put:
      operationId: updateJob
      summary: Update ingestion job status
      tags:
        - jobs
      parameters:
        - $ref: '#/components/parameters/jobId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updatePayload'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/job'
        400:
          $ref: '#/components/responses/badRequest'
        404:
          $ref: '#/components/responses/notFound'
        '5XX':
          $ref: '#/components/responses/unexpectedError'
components:
  parameters:
    jobId:
      in: path
      name: jobId
      required: true
      schema:
        type: string
        format: uuid
      description: The job id
      example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
  responses:
    badRequest:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/error'
    notFound:
      description: Not Found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/error'
    unexpectedError:
      description: Unexpected Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/error'
  schemas:
    error:
      type: object
      required:
        - message
      properties:
        message:
          type: string
    createPayload:
      type: object
      required:
        - parameters
      properties:
        resourceId:
          type: string
          format: uuid
          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        version:
          type: string
          example: "1.0"
        type:
          type: string
          example: 3D
        description:
          type: string
        parameters:
          type: object
        creationTime:
          type: string
          format: date
        updateTime:
          type: string
          format: date
        status:
          type: string
          example: Pending
        reason:
          type: string
    updatePayload:
      type: object
      required:
        - status
      properties:
        status:
          type: string
    job:
      type: object
      required:
        - parameters
      properties:
        id:
          type: string
          format: uuid
          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        resourceId:
          type: string
          format: uuid
          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        version:
          type: string
        type:
          type: string
        description:
          type: string
        parameters:
          type: object
        creationTime:
          type: string
          format: date
        updateTime:
          type: string
          format: date
        status:
          type: string
          enum:
            - Pending
            - In-Progress
            - Completed
            - Failed
          default: Pending
        reason:
          type: string
        tasks:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                format: uuid
                example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
              resourceId:
                type: string
                format: uuid
                example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
              description:
                type: string
              parameters:
                type: object
              creationTime:
                type: string
                format: date
              updateTime:
                type: string
                format: date
              status:
                type: string
                enum:
                  - Pending
                  - In-Progress
                  - Completed
                  - Failed
                default: Pending
              reason:
                type: string
              attempts:
                type: number
    jobs:
      type: array
      items:
        $ref: '#/components/schemas/job'